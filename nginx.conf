# Main Nginx configuration file

user  nginx;
worker_processes  auto;
error_log  /var/log/nginx/error.log warn;
pid        /var/run/nginx.pid;

events {
    worker_connections  1024;
}

http {
    include       /etc/nginx/mime.types;
    default_type  application/octet-stream;

    log_format  main  '$remote_addr - $remote_user [$time_local] "$request" '
                      '$status $body_bytes_sent "$http_referer" '
                      '"$http_user_agent" "$http_x_forwarded_for"';

    access_log  /var/log/nginx/access.log  main;

    sendfile        on;
    keepalive_timeout  65;

    # Gzip settings
    gzip on;
    gzip_types text/plain text/css application/json application/javascript text/xml application/xml application/xml+rss text/javascript;

    # Server block for HTTP to HTTPS redirection
    server {
        listen 80;
        server_name transpo.mcgi.services;

        # Redirect all HTTP traffic to HTTPS
        location / {
            return 301 https://$host$request_uri;
        }
    }

    # Server block for HTTPS
    server {
        listen 443 ssl;
        server_name transpo.mcgi.services;

        ssl_certificate /etc/letsencrypt/live/transpo.mcgi.services/fullchain.pem;
        ssl_certificate_key /etc/letsencrypt/live/transpo.mcgi.services/privkey.pem;
        ssl_protocols TLSv1.2 TLSv1.3;
        ssl_ciphers HIGH:!aNULL:!MD5;

        # Serve static assets for the Rails app from the public directory
        location / {
            root /app/public;  # Assuming the Rails public directory is at /app/public
            try_files $uri/index.html $uri @rails;  # Serve static files or proxy to Rails
        }

        location @rails {
            proxy_pass http://web:3000;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
        }

        # Serve static assets for webpush from the Rails public directory
        location /webpush {
            root /app/public;  # Serve static files from Rails' public directory
            try_files $uri/index.html $uri @webpush;  # Serve static files or proxy to Node.js
        }

        location @webpush {
            proxy_pass http://webpush:9090;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
        }
    }
}
